{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","onShowClick","e","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.50d3ebf2.chunk.js","sourcesContent":["// File that contains hard coded Contact data.\nimport React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact )\n            };\n        default:\n            return state;\n\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [ // state that holds the key \"contacts\" and the value is an array\n        ],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    // uses AXIOS \"npm i axios\"\n    async componentDidMount() {\n        const res =  await axios.get('https://jsonplaceholder.typicode.com/users');\n            // .then(res => this.setState({contacts: res.data}))\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}> {/* Here  you create a provider which is giving off a value \"this.state\" */}\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer} from \"../../context\";\nimport axios from 'axios';\n\nclass Contact extends Component{\n\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick =  async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch(e){\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n    };\n\n    // Use a arrow function instead of binding \"this\" the constructor or handler, now the \"this\" keyword is available inside of the arrow function . \"look into .bind()\"\n    onShowClick = e => {\n        this.setState({showContactInfo:\n            !this.state.showContactInfo }); // Here you make the event toggle the sate of \"showContactInfo()\" it sets it to opposite \"!example\"\n    };\n\n    render() {\n        const { id, name, email, phone } = this.props.contact; { /* here you prefix all the props with \"this.props.\"; */ }\n        const { showContactInfo } = this.state; {/* here you pull showContactInfo value out of \"this.state\". */ }\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return(\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                                Name: {name} <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}} />\n                                <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\n                            <Link to={`contact/edit/${id}`}>\n                                <i className=\"fas fa-pencil-alt mr-2\" style={{cursor: 'pointer', float: 'right', color: 'black'}}></i>\n                            </Link>\n                            </h4>\n                            {showContactInfo ? (<ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\n                                </ul>\n\n                            ) : null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\n// Typechecking validation \"Define what kind of prop type you have\".\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\n\n// All your components need to be exported to your main App.js file\nexport default Contact;\n\n","import React, {Component} from 'react';\nimport Contact from './Contact'\nimport { Consumer} from \"../../context\"; // import Consumer anywhere you need access to context.\n\nclass Contacts extends Component {\n\n    render() {\n        {/* here you return consumer, which value contains the whole state*/}\n        return(\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment> {/* React fragment to make this a pseudo element. \"won't show up in the dom*/}\n                           <h1 className=\"display-4 mb-2\">\n                               <span className=\"text-danger\">Contact</span> List\n                           </h1>\n                            {contacts.map(contact => ( // looping through the contacts with map and returning a single \"contact component\" for each one of them.\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n        return (\n            <div className=\"form-group\">\n                <label htmlFor={name}>{label}</label>\n                <input type={type} name={name} className={classnames('form-control form-control-lg', {'is-invalid': error})} placeholder={placeholder} value={value} onChange={onChange}/>\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n\n            </div>\n        );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, {Component} from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n\n      const { name, email,  phone } = this.state;\n\n      //Check for errors\n        if(name === '') {\n            this.setState({errors: {name:'Name is required' }});\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email:'Email is required' }});\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone:'Phone is required' }});\n            return;\n        }\n\n      const newContact = {\n          // id: uuid(),\n          name: name,\n          email: email,\n          phone: phone\n      };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n            dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n\n\n      // Here you clear the state again so the fields get emptied out after submitting.\n      this.setState({\n          name: '',\n          email: '',\n          phone: '',\n          errors: {}\n      });\n      this.props.history.push('/'); // here you redirect to the homepage after submitting.\n    };\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n\n    render() {\n        const { name, email, phone, errors} = this.state; // Here you pull the name, email, phone out of this.state.\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } =value;\n                    return(\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter Phone...\"\n                                    value={phone}\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                />\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default AddContact;","import React, {Component} from 'react';\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n\n    // Fetching the contact data from the backend and putting it in the state\n    async componentDidMount(){\n        const  { id } = this.props.match.params; // lets you pull the id from the parameter.\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        // putting the response data in the var \"contact\"\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    };\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const { name, email,  phone } = this.state;\n\n        //Check for errors\n        if(name === '') {\n            this.setState({errors: {name:'Name is required' }});\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email:'Email is required' }});\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone:'Phone is required' }});\n            return;\n        }\n\n        // You're able to get and edit \"Name, email, phone\" Because it's coming from the state.\n        const updContact = {\n            name: name,\n            email: email,\n            phone: phone\n        };\n\n        // here you make the PUT  request \"you pull the id out of the URL\"\n        const  { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        // Here you clear the state again so the fields get emptied out after submitting.\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n        this.props.history.push('/'); // here you redirect to the homepage after submitting.\n    };\n\n    onChange = e => this.setState({[e.target.name]: e.target.value});\n\n\n    render() {\n        const { name, email, phone, errors} = this.state; // Here you pull the name, email, phone out of this.state.\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } =value;\n                    return(\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => { // Here you pass the props parameter to get the props \"branding\".\n\n    const { branding } = props; // Here you prefix all the props with \"props.\" \"destructuring\";\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home mr-2\"/>\n                                 Home\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                                <i className=\"fas fa-plus mr-2\"/>\n                                Add\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to=\"/about\" className=\"nav-link\">\n                                <i className=\"fas fa-question mr-2\"/>\n                                About\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n        </div>\n        </nav>\n    );\n};\n\nHeader.defaultProps = { /* Defines Default output if nothing gets passed to the prop */\n    branding: 'Contact Manager'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired // Typechecking validation, \"define what kind of prop type you have \"string/bool/object/integer\"\".\n};\n\n\n//  Export to main App.js\nexport default Header;\n\n","import React from 'react';\n\n\nexport default () => {\n        return (\n            <div>\n                <h1 className=\"display-4\">About Contact Manager</h1>\n                <p className=\"lead\">Simple app to manage contacts</p>\n                <p className=\"text-secondary\">Version 1.0.0</p>\n            </div>\n        );\n    };\n\n\n","import React, {Component} from 'react';\n\nexport default () => {\n        return (\n            <div>\n                <h1 className=\"display-4\"> <span className=\"text-danger\">404</span> Page Not Found</h1>\n                <p className=\"lead\">Sorry, that page does not exist</p>\n            </div>\n        );\n    }\n\n\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\n\n\nimport { Provider } from './context';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\n// Meeting place for all components\nclass App extends Component {\n    render() {\n    return (\n        <Provider> {/* Here you wrap your main app in the provider so you have access to it. */}\n       <Router>\n        <div className=\"App\">\n            <Header branding=\"Contact Manager\"/> {/* Here you pass props \"branding\" to the header component \"which is a functional component\" */ }\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/\" component={Contacts}/>\n                    <Route exact path=\"/contact/add\" component={AddContact}/>\n                    <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                    <Route exact path=\"/about\" component={About}/>\n                    <Route component={NotFound}/>\n                </Switch>\n            </div>\n        </div>\n       </Router>\n        </Provider>\n    );\n    }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}